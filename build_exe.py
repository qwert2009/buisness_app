#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ Business Manager —Å –ø–æ–º–æ—â—å—é Python
"""
import subprocess
import sys
import os
import shutil
from pathlib import Path

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è exe"""
    print("üè≠ Business Manager - –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞")
    print("=" * 60)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
    source_dir = Path("C:/Users/Windows 11/Desktop/qwe")
    target_dir = source_dir / "–ù–æ–≤–∞—è –ø–∞–ø–∫–∞"
    
    print(f"üìÇ –ò—Å—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: {source_dir}")
    print(f"üì¶ –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞: {target_dir}")
    
    # –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É
    target_dir.mkdir(exist_ok=True)
    
    # –ú–µ–Ω—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    os.chdir(target_dir)
    print(f"üìÇ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {target_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PyInstaller
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ PyInstaller...")
    try:
        import PyInstaller
        print("‚úÖ PyInstaller —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller...")
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "PyInstaller"])
            print("‚úÖ PyInstaller —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PyInstaller: {e}")
            return False
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
    print("\nüìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    files_to_copy = [
        "business_manager.py",
        "smart_functions.py", 
        "notifications.py",
        "advanced_analytics.py"
    ]
    
    for file_name in files_to_copy:
        source_file = source_dir / file_name
        target_file = target_dir / file_name
        
        if source_file.exists():
            try:
                shutil.copy2(source_file, target_file)
                print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file_name}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è {file_name}: {e}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ launcher —É–∂–µ —Å–æ–∑–¥–∞–Ω
    launcher_file = target_dir / "business_manager_launcher.py"
    if not launcher_file.exists():
        print("‚ùå –§–∞–π–ª business_manager_launcher.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞ –≤ –ø–∞–ø–∫–µ '–ù–æ–≤–∞—è –ø–∞–ø–∫–∞'")
        return False
    
    print("‚úÖ Launcher —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º exe —Ñ–∞–π–ª
    print("\nüî® –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞...")
    print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
    
    try:
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è exe
        cmd = [
            sys.executable, "-m", "PyInstaller",
            "--onefile",
            "--console", 
            "--name", "BusinessManager",
            "--clean",
            "--distpath", ".",  # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å exe –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
            "business_manager_launcher.py"
        ]
        
        print(f"üîß –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ exe —Ñ–∞–π–ª–∞
            exe_file = target_dir / "BusinessManager.exe"
            if exe_file.exists():
                file_size = exe_file.stat().st_size / (1024 * 1024)  # MB
                print(f"üéâ –£–°–ü–ï–®–ù–û! Exe —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω!")
                print(f"üì¶ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} MB")
                print(f"üìç –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {exe_file}")
                
                print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
                print("1. –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ BusinessManager.exe")
                print("2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
                print("3. –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
                print("4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!")
                
                return True
            else:
                print("‚ùå Exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ exe —Ñ–∞–π–ª–∞:")
            print("STDOUT:", result.stdout)
            print("STDERR:", result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
