#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ exe —Ñ–∞–π–ª–∞ Business Manager
"""
import os
import sys
import subprocess
from pathlib import Path

def diagnose_exe():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ exe —Ñ–∞–π–ª–∞"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ exe —Ñ–∞–π–ª–∞ Business Manager")
    print("=" * 50)
    
    exe_path = Path("C:/Users/Windows 11/Desktop/qwe/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/BusinessManager.exe")
    
    print(f"üìç –ü—É—Ç—å –∫ exe: {exe_path}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if exe_path.exists():
        print("‚úÖ Exe —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        size_bytes = exe_path.stat().st_size
        size_mb = size_bytes / (1024 * 1024)
        print(f"üì¶ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_mb:.1f} MB ({size_bytes:,} –±–∞–π—Ç)")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
        if exe_path.suffix.lower() == '.exe':
            print("‚úÖ –§–∞–π–ª –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .exe")
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è .exe")
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        try:
            result = subprocess.run(['file', str(exe_path)], 
                                  capture_output=True, text=True, timeout=10)
            if result.returncode == 0:
                print(f"üìã –¢–∏–ø —Ñ–∞–π–ª–∞: {result.stdout.strip()}")
        except:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞ (–∫–æ–º–∞–Ω–¥–∞ 'file' –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ exe —Ñ–∞–π–ª–∞
        print("\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ exe —Ñ–∞–π–ª–∞...")
        try:
            # –ú–µ–Ω—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            os.chdir(exe_path.parent)
            print(f"üìÇ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {exe_path.parent}")
            
            # –ó–∞–ø—É—Å–∫ exe —Ñ–∞–π–ª–∞
            process = subprocess.Popen(
                [str(exe_path)],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            print("‚è≥ Exe —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω, –∂–¥–µ–º –≤—ã–≤–æ–¥–∞...")
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            import time
            time.sleep(5)
            
            if process.poll() is None:
                print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å exe —Ñ–∞–π–ª–∞ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:8501")
                
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                process.terminate()
                try:
                    process.wait(timeout=5)
                except subprocess.TimeoutExpired:
                    process.kill()
                
                return True
            else:
                # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
                stdout, stderr = process.communicate()
                print(f"‚ùå Exe —Ñ–∞–π–ª –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: {process.returncode}")
                if stdout:
                    print(f"üì§ –í—ã–≤–æ–¥: {stdout}")
                if stderr:
                    print(f"‚ùå –û—à–∏–±–∫–∏: {stderr}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ exe —Ñ–∞–π–ª–∞: {e}")
            return False
            
    else:
        print("‚ùå Exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        # –ò—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        folder_path = exe_path.parent
        if folder_path.exists():
            print(f"\nüìã –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ {folder_path.name}:")
            for file in folder_path.iterdir():
                if file.is_file():
                    size_mb = file.stat().st_size / (1024 * 1024)
                    print(f"  üìÑ {file.name} ({size_mb:.1f} MB)")
        
        return False

def suggest_solutions():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏–π"""
    print("\nüí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏–π:")
    print("=" * 30)
    
    print("1Ô∏è‚É£ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:")
    print("   ‚Ä¢ –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ BusinessManager.py")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ BusinessManager.bat")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ start_server.bat –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–ø–∫–µ")
    
    print("\n2Ô∏è‚É£ –ï—Å–ª–∏ exe —Ñ–∞–π–ª –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è:")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å (–¥–æ–±–∞–≤—å—Ç–µ –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏—è)")
    print("   ‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç–µ Windows Defender")
    
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:")
    print("   ‚Ä¢ Windows 10/11 64-bit")
    print("   ‚Ä¢ –°–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç 8501")
    print("   ‚Ä¢ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø—É—Å–∫ exe —Ñ–∞–π–ª–æ–≤")
    
    print("\n4Ô∏è‚É£ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - Python –≤–µ—Ä—Å–∏—è:")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python auto_start_server.py")
    print("   ‚Ä¢ –ò–ª–∏: python -m streamlit run business_manager.py")

if __name__ == "__main__":
    success = diagnose_exe()
    suggest_solutions()
    
    if not success:
        print("\nüîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Python –≤–µ—Ä—Å–∏—é –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
