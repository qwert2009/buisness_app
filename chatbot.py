import random
import sqlite3
import pandas as pd
from datetime import datetime, timedelta
import json

class BusinessChatBot:
    """–ò–ò —á–∞—Ç-–±–æ—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"""
    
    def __init__(self, db_path='business_manager.db'):
        self.db_path = db_path
        self.responses = {
            'greeting': [
                "–ü—Ä–∏–≤–µ—Ç! üëã –Ø –≤–∞—à –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –±–∏–∑–Ω–µ—Å—É. –ö–∞–∫ –¥–µ–ª–∞ —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏?",
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöÄ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –±–∏–∑–Ω–µ—Å!",
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üíº –î–∞–≤–∞–π—Ç–µ —É–≤–µ–ª–∏—á–∏–º –≤–∞—à—É –ø—Ä–∏–±—ã–ª—å –≤–º–µ—Å—Ç–µ!"
            ],
            'profit_question': [
                "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–∏–±—ã–ª–∏! üí∞ –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ...",
                "–ü—Ä–∏–±—ã–ª—å - —ç—Ç–æ –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É! üìà –°–µ–π—á–∞—Å –ø–æ—Å–º–æ—Ç—Ä—é –≤–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏...",
                "–í–æ–ø—Ä–æ—Å –Ω–∞ –º–∏–ª–ª–∏–æ–Ω! üíé –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –±–∏–∑–Ω–µ—Å..."
            ],
            'inventory_question': [
                "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º - –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞! üì¶ –ü—Ä–æ–≤–µ—Ä—è—é –≤–∞—à–∏ –∑–∞–ø–∞—Å—ã...",
                "–•–æ—Ä–æ—à–∏–π —Å–∫–ª–∞–¥ = —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–æ–¥–∞–∂–∏! üè™ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–∏—Ç—É–∞—Ü–∏—é...",
                "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∫–ª–∞–¥–∞ –ø–æ–º–æ–∂–µ—Ç —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å! üí° –ò–∑—É—á–∞—é –¥–∞–Ω–Ω—ã–µ..."
            ],
            'sales_question': [
                "–ü—Ä–æ–¥–∞–∂–∏ - —ç—Ç–æ —Å–µ—Ä–¥—Ü–µ –±–∏–∑–Ω–µ—Å–∞! ‚ù§Ô∏è –°–º–æ—Ç—Ä—é –≤–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏...",
                "–û—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–∞! üéØ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–∏ –ø—Ä–æ–¥–∞–∂–∏...",
                "–ü—Ä–æ–¥–∞–∂–∏ —Ä–∞—Å—Ç—É—Ç? üìä –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –≤–º–µ—Å—Ç–µ!"
            ]
        }
    
    def get_connection(self):
        return sqlite3.connect(self.db_path)
    
    def classify_question(self, question):
        """–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        question_lower = question.lower()
        
        profit_keywords = ['–ø—Ä–∏–±—ã–ª—å', '–¥–æ—Ö–æ–¥', '–∑–∞—Ä–∞–±–æ—Ç–æ–∫', '–¥–µ–Ω—å–≥–∏', '–≤—ã—Ä—É—á–∫–∞', '–º–∞—Ä–∂–∞']
        inventory_keywords = ['—Å–∫–ª–∞–¥', '—Ç–æ–≤–∞—Ä', '–∑–∞–ø–∞—Å', '–æ—Å—Ç–∞—Ç–æ–∫', '–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å']
        sales_keywords = ['–ø—Ä–æ–¥–∞–∂–∏', '–∑–∞–∫–∞–∑', '–∫–ª–∏–µ–Ω—Ç', '–ø–æ–∫—É–ø–∞—Ç–µ–ª—å', '–æ–±—ä–µ–º']
        greeting_keywords = ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å', '–Ω–∞—á–∞–ª–æ']
        
        if any(word in question_lower for word in profit_keywords):
            return 'profit_question'
        elif any(word in question_lower for word in inventory_keywords):
            return 'inventory_question'
        elif any(word in question_lower for word in sales_keywords):
            return 'sales_question'
        elif any(word in question_lower for word in greeting_keywords):
            return 'greeting'
        else:
            return 'general'
    
    def get_business_insights(self, user_id):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –æ –±–∏–∑–Ω–µ—Å–µ"""
        conn = self.get_connection()
        
        try:
            # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            query = '''
                SELECT 
                    COUNT(DISTINCT o.id) as total_orders,
                    SUM(oi.sale_price * oi.quantity) as total_revenue,
                    SUM((oi.sale_price - oi.cost_price) * oi.quantity) as total_profit,
                    AVG(oi.sale_price * oi.quantity) as avg_order_value,
                    COUNT(DISTINCT oi.product_name) as unique_products
                FROM order_items oi
                JOIN orders o ON oi.order_id = o.id
                WHERE o.user_id = ? AND o.created_at >= date('now', '-30 days')
            '''
            
            df = pd.read_sql_query(query, conn, params=(user_id,))
            
            if df.empty or df.iloc[0]['total_orders'] == 0:
                return {
                    'total_orders': 0,
                    'total_revenue': 0,
                    'total_profit': 0,
                    'avg_order_value': 0,
                    'unique_products': 0,
                    'profit_margin': 0
                }
            
            row = df.iloc[0]
            profit_margin = (row['total_profit'] / row['total_revenue'] * 100) if row['total_revenue'] > 0 else 0
            
            return {
                'total_orders': int(row['total_orders']),
                'total_revenue': float(row['total_revenue']),
                'total_profit': float(row['total_profit']),
                'avg_order_value': float(row['avg_order_value']),
                'unique_products': int(row['unique_products']),
                'profit_margin': round(profit_margin, 1)
            }
            
        finally:
            conn.close()
    
    def get_inventory_status(self, user_id):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∫–ª–∞–¥–∞"""
        conn = self.get_connection()
        
        try:
            query = '''
                SELECT 
                    COUNT(*) as total_products,
                    SUM(quantity) as total_items,
                    AVG(quantity) as avg_stock_per_product
                FROM inventory
                WHERE user_id = ?
            '''
            
            df = pd.read_sql_query(query, conn, params=(user_id,))
            
            if df.empty:
                return {'total_products': 0, 'total_items': 0, 'avg_stock_per_product': 0}
            
            row = df.iloc[0]
            return {
                'total_products': int(row['total_products']),
                'total_items': int(row['total_items']),
                'avg_stock_per_product': round(float(row['avg_stock_per_product']), 1)
            }
            
        finally:
            conn.close()
    
    def generate_smart_response(self, user_id, question):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–º–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        question_type = self.classify_question(question)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        insights = self.get_business_insights(user_id)
        inventory = self.get_inventory_status(user_id)
        
        # –ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç
        base_response = random.choice(self.responses.get(question_type, ["–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! ü§î –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è..."]))
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–æ–≤–µ—Ç
        if question_type == 'profit_question':
            if insights['total_profit'] > 0:
                advice = f"""
üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 30 –¥–Ω–µ–π:**
‚Ä¢ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${insights['total_profit']:.2f}
‚Ä¢ –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {insights['profit_margin']:.1f}%
‚Ä¢ –ó–∞–∫–∞–∑–æ–≤: {insights['total_orders']}

üí° **–ú–æ–π —Å–æ–≤–µ—Ç:**
"""
                if insights['profit_margin'] < 15:
                    advice += "–í–∞—à–∞ –º–∞—Ä–∂–∞ –Ω–∏–∂–µ 15% - —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—ã –∏–ª–∏ –Ω–∞–π—Ç–∏ –±–æ–ª–µ–µ –¥–µ—à–µ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤! üìà"
                elif insights['profit_margin'] > 30:
                    advice += "–û—Ç–ª–∏—á–Ω–∞—è –º–∞—Ä–∂–∞! –ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –æ–±—ä–µ–º—ã –∏–ª–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥! üöÄ"
                else:
                    advice += "–•–æ—Ä–æ—à–∞—è –º–∞—Ä–∂–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º—ã–µ –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã! üéØ"
            else:
                advice = "–ü–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞–ª–æ, –Ω–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ! –ö–∞–∂–¥—ã–π —É—Å–ø–µ—à–Ω—ã–π –±–∏–∑–Ω–µ—Å –Ω–∞—á–∏–Ω–∞–ª—Å—è —Å –Ω—É–ª—è. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º —Å–µ—Ä–≤–∏—Å–µ! üí™"
        
        elif question_type == 'inventory_question':
            advice = f"""
üì¶ **–í–∞—à —Å–∫–ª–∞–¥:**
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ: {inventory['total_products']}
‚Ä¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {inventory['total_items']} —à—Ç
‚Ä¢ –í —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ —Ç–æ–≤–∞—Ä: {inventory['avg_stock_per_product']} —à—Ç

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**
"""
            if inventory['total_products'] > 50:
                advice += "–ë–æ–ª—å—à–æ–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç! –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ, –∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–æ–¥–∞—é—Ç—Å—è –ª—É—á—à–µ –≤—Å–µ–≥–æ! üìä"
            elif inventory['total_products'] < 10:
                advice += "–°—Ç–æ–∏—Ç —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç - –±–æ–ª—å—à–µ —Ç–æ–≤–∞—Ä–æ–≤ = –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! üõí"
            else:
                advice += "–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å—é –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞! ‚ö°"
        
        elif question_type == 'sales_question':
            if insights['total_orders'] > 0:
                advice = f"""
üéØ **–í–∞—à–∏ –ø—Ä–æ–¥–∞–∂–∏:**
‚Ä¢ –ó–∞–∫–∞–∑–æ–≤ –∑–∞ –º–µ—Å—è—Ü: {insights['total_orders']}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${insights['avg_order_value']:.2f}
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {insights['unique_products']}

üí° **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:**
"""
                if insights['avg_order_value'] < 20:
                    advice += "–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –Ω–∏–∑–∫–∏–π - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫—Ä–æ—Å—Å-–ø—Ä–æ–¥–∞–∂–∏ –∏ –±–æ–Ω—É—Å—ã –∑–∞ –æ–±—ä–µ–º! üí∞"
                elif insights['avg_order_value'] > 100:
                    advice += "–í—ã—Å–æ–∫–∏–π —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫! –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ VIP-–∫–ª–∏–µ–Ω—Ç–∞—Ö –∏ –ø—Ä–µ–º–∏—É–º —Å–µ–≥–º–µ–Ω—Ç–µ! üíé"
                else:
                    advice += "–•–æ—Ä–æ—à–∏–π —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫! –†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º —á–∞—Å—Ç–æ—Ç—ã –ø–æ–∫—É–ø–æ–∫! üîÑ"
            else:
                advice = "–ü—Ä–æ–¥–∞–∂–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è! –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –ø–µ—Ä–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö - –æ–Ω–∏ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ! üåü"
        
        else:
            advice = self._generate_general_advice(insights, inventory)
        
        return f"{base_response}\n\n{advice}"
    
    def _generate_general_advice(self, insights, inventory):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—â–∏–π —Å–æ–≤–µ—Ç"""
        tips = []
        
        if insights['total_orders'] == 0:
            tips.append("üöÄ –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ - –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑!")
        
        if inventory['total_products'] > 0 and insights['total_orders'] == 0:
            tips.append("üì¶ –£ –≤–∞—Å –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–µ - –≤—Ä–µ–º—è –ø—Ä–æ–¥–∞–≤–∞—Ç—å!")
        
        if insights['profit_margin'] > 0:
            tips.append(f"üí∞ –í–∞—à–∞ –º–∞—Ä–∂–∞ {insights['profit_margin']:.1f}% - —ç—Ç–æ {'–æ—Ç–ª–∏—á–Ω–æ' if insights['profit_margin'] > 25 else '—Ö–æ—Ä–æ—à–æ' if insights['profit_margin'] > 15 else '–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å'}!")
        
        if not tips:
            tips = [
                "üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ - —ç—Ç–æ –∫–ª—é—á –∫ —Ä–æ—Å—Ç—É!",
                "üéØ –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–º—ã—Ö –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö!",
                "üí° –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ü–µ–Ω–∞–º–∏ –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º!",
                "ü§ù –î–æ–≤–æ–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã - –ª—É—á—à–∞—è —Ä–µ–∫–ª–∞–º–∞!"
            ]
        
        return "üí° **–ú–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n" + "\n".join(f"‚Ä¢ {tip}" for tip in random.sample(tips, min(3, len(tips))))
    
    def get_quick_business_summary(self, user_id):
        """–ü–æ–ª—É—á–∞–µ—Ç –±—ã—Å—Ç—Ä—É—é —Å–≤–æ–¥–∫—É –±–∏–∑–Ω–µ—Å–∞"""
        insights = self.get_business_insights(user_id)
        inventory = self.get_inventory_status(user_id)
        
        if insights['total_orders'] == 0:
            return "üöÄ **–í–∞—à –±–∏–∑–Ω–µ—Å —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!** –í—Ä–µ–º—è —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –∏ –ø–æ–∫–æ—Ä–∏—Ç—å —Ä—ã–Ω–æ–∫!"
        
        summary = f"""
üè¢ **–ë—ã—Å—Ç—Ä–∞—è —Å–≤–æ–¥–∫–∞ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞:**

üìä **–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:**
‚Ä¢ –ó–∞–∫–∞–∑–æ–≤: {insights['total_orders']}
‚Ä¢ –í—ã—Ä—É—á–∫–∞: ${insights['total_revenue']:.2f}
‚Ä¢ –ü—Ä–∏–±—ã–ª—å: ${insights['total_profit']:.2f}
‚Ä¢ –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {insights['profit_margin']:.1f}%

üì¶ **–°–∫–ª–∞–¥:**
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤: {inventory['total_products']}
‚Ä¢ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {inventory['total_items']} —à—Ç

üéØ **–°—Ç–∞—Ç—É—Å:** {'üî• –û—Ç–ª–∏—á–Ω–æ!' if insights['profit_margin'] > 25 else 'üìà –•–æ—Ä–æ—à–æ!' if insights['profit_margin'] > 15 else '‚ö° –ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª!'}
        """
        
        return summary
    
    def get_business_tips(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –±–∏–∑–Ω–µ—Å-—Å–æ–≤–µ—Ç—ã"""
        tips = [
            "ÔøΩ **–ó–æ–ª–æ—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ:** 80% –ø—Ä–∏–±—ã–ª–∏ –ø—Ä–∏–Ω–æ—Å—è—Ç 20% —Ç–æ–≤–∞—Ä–æ–≤. –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–∏ 20%!",
            "üéØ **–§–æ–∫—É—Å –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ:** –£–¥–µ—Ä–∂–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –≤ 5 —Ä–∞–∑ –¥–µ—à–µ–≤–ª–µ, —á–µ–º –ø—Ä–∏–≤–ª–µ—á—å –Ω–æ–≤–æ–≥–æ!",
            "üìä **–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ:** –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–∫—Ç–æ–≤, –∞ –Ω–µ –∏–Ω—Ç—É–∏—Ü–∏–∏!",
            "üöÄ **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:** –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ —Ä—É—Ç–∏–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Ñ–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Ä–æ—Å—Ç–µ!",
            "üí∞ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω—å–≥–∞–º–∏:** –°–ª–µ–¥–∏—Ç–µ –∑–∞ –¥–µ–Ω–µ–∂–Ω—ã–º –ø–æ—Ç–æ–∫–æ–º - —ç—Ç–æ –∞—Ä—Ç–µ—Ä–∏—è –±–∏–∑–Ω–µ—Å–∞!",
            "üèÜ **–ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ:** –õ—É—á—à–µ –ø—Ä–æ–¥–∞—Ç—å –º–µ–Ω—å—à–µ, –Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ!",
            "üìà **–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ:** –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª–∞–π—Ç–µ —á—Ç–æ-—Ç–æ –¥–ª—è —Ä–æ—Å—Ç–∞ –±–∏–∑–Ω–µ—Å–∞!",
            "ü§ù **–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞:** –°—Ç—Ä–æ–π—Ç–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏ –∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏!",
            "üé® **–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏:** –ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –Ω–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ —É—Å–ª—É–≥–∞–º–∏!",
            "ÔøΩ **–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞!"
        ]
        return random.choice(tips)
    
    def get_market_advice(self, user_id):
        """–î–∞–µ—Ç —Ä—ã–Ω–æ—á–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö"""
        insights = self.get_business_insights(user_id)
        
        advices = []
        
        if insights['avg_order_value'] < 25:
            advices.append("üí∞ **–£–≤–µ–ª–∏—á—å—Ç–µ —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫:** –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–ª–∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–∞–±–æ—Ä—ã!")
        
        if insights['profit_margin'] < 20:
            advices.append("üìä **–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –º–∞—Ä–∂—É:** –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–∫—É–ø–æ—á–Ω—ã–µ —Ü–µ–Ω—ã –∏–ª–∏ —É–≤–µ–ª–∏—á—å—Ç–µ —Ä–æ–∑–Ω–∏—á–Ω—ã–µ!")
        
        if insights['total_orders'] < 10:
            advices.append("üöÄ **–£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–æ–¥–∞–∂–∏:** –†–∞—Å—à–∏—Ä—å—Ç–µ –∫–∞–Ω–∞–ª—ã –ø—Ä–æ–¥–∞–∂ –∏ —É–ª—É—á—à–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥!")
        
        if not advices:
            advices = [
                "üèÜ **–û—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ!** –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–π—Ç–µ —É—Å–ø–µ—à–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏!",
                "üìà **–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞:** –í–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Ö–æ—Ä–æ—à–∏ - –ø–æ—Ä–∞ –¥—É–º–∞—Ç—å –æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞!",
                "üíé **VIP-–∫–ª–∏–µ–Ω—Ç—ã:** –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π!"
            ]
        
        return "üéØ **–†—ã–Ω–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n\n" + "\n\n".join(f"‚Ä¢ {advice}" for advice in advices[:3])
    
    def get_seasonal_advice(self):
        """–î–∞–µ—Ç —Å–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã"""
        current_month = datetime.now().month
        
        seasonal_tips = {
            1: "‚ùÑÔ∏è **–Ø–Ω–≤–∞—Ä—å:** –í—Ä–µ–º—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è! –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–¥–∞ –∏ –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Ü–µ–ª–∏.",
            2: "ÔøΩ **–§–µ–≤—Ä–∞–ª—å:** –î–µ–Ω—å –°–≤—è—Ç–æ–≥–æ –í–∞–ª–µ–Ω—Ç–∏–Ω–∞ - –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∞–∫—Ü–∏–π!",
            3: "üå∏ **–ú–∞—Ä—Ç:** –í–µ—Å–µ–Ω–Ω–∏–µ —Ç–æ–≤–∞—Ä—ã –≤—Ö–æ–¥—è—Ç –≤ —Ç—Ä–µ–Ω–¥. –û–±–Ω–æ–≤–∏—Ç–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç!",
            4: "üê∞ **–ê–ø—Ä–µ–ª—å:** –ü–∞—Å—Ö–∞–ª—å–Ω—ã–π —Å–µ–∑–æ–Ω - –≤—Ä–µ–º—è –¥–ª—è —Å–ª–∞–¥–∫–∏—Ö –ø—Ä–æ–¥–∞–∂!",
            5: "üåû **–ú–∞–π:** –ú–∞–π—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ - —É–≤–µ–ª–∏—á—å—Ç–µ –∑–∞–ø–∞—Å—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!",
            6: "üë∂ **–ò—é–Ω—å:** –î–µ–Ω—å –∑–∞—â–∏—Ç—ã –¥–µ—Ç–µ–π - –¥–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –ø–∏–∫–µ —Å–ø—Ä–æ—Å–∞!",
            7: "ÔøΩÔ∏è **–ò—é–ª—å:** –õ–µ—Ç–Ω–∏–π —Å–µ–∑–æ–Ω - –≤—Ä–µ–º—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π!",
            8: "‚òÄÔ∏è **–ê–≤–≥—É—Å—Ç:** –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ - –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—è –∏ —É—á–µ–±–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏!",
            9: "üéí **–°–µ–Ω—Ç—è–±—Ä—å:** –ù–∞—á–∞–ª–æ —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞ - –ø–∏–∫ –ø—Ä–æ–¥–∞–∂ —à–∫–æ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!",
            10: "üçÇ **–û–∫—Ç—è–±—Ä—å:** –•—ç–ª–ª–æ—É–∏–Ω –∏ –æ—Å–µ–Ω–Ω–∏–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞–±–∏—Ä–∞—é—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å!",
            11: "ü¶É **–ù–æ—è–±—Ä—å:** –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∏–º–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–º—É —Å–µ–∑–æ–Ω—É!",
            12: "üéÑ **–î–µ–∫–∞–±—Ä—å:** –ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏ - —Å–∞–º–æ–µ –≥–æ—Ä—è—á–µ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞!"
        }
        
        return seasonal_tips.get(current_month, "üìÖ **–ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü** - —ç—Ç–æ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞!")
    
    def analyze_user_question_advanced(self, question, user_id):
        """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–∞ —Å —É—á–µ—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        question_lower = question.lower()
        insights = self.get_business_insights(user_id)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ–Ω—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ
        if any(word in question_lower for word in ['–ø–æ–º–æ—â—å', '—á—Ç–æ –¥–µ–ª–∞—Ç—å', '–∫–∞–∫', '—Å–æ–≤–µ—Ç']):
            if insights['total_orders'] == 0:
                return self._get_startup_advice()
            elif insights['profit_margin'] < 10:
                return self._get_profit_improvement_advice()
            else:
                return self._get_growth_advice()
        
        return None
    
    def _get_startup_advice(self):
        """–°–æ–≤–µ—Ç—ã for –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"""
        return """
üöÄ **–°–æ–≤–µ—Ç—ã –¥–ª—è –Ω–∞—á–∞–ª–∞:**

1. **üì¶ –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã:** –ù–∞—á–Ω–∏—Ç–µ —Å 5-10 —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—Ç–µ
2. **üí∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ü–µ–Ω—ã:** –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å + 30-50% = —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞
3. **üìä –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑:** –î–∞–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π - —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
4. **üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ:** –ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ü–∏—Ñ—Ä—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ

üí° **–ü–æ–º–Ω–∏—Ç–µ:** –ö–∞–∂–¥—ã–π –≤–µ–ª–∏–∫–∏–π –±–∏–∑–Ω–µ—Å –Ω–∞—á–∏–Ω–∞–ª—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞!
        """
    
    def _get_profit_improvement_advice(self):
        """–°–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø—Ä–∏–±—ã–ª–∏"""
        return """
üìà **–ö–∞–∫ —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏–±—ã–ª—å:**

1. **üîç –ê–Ω–∞–ª–∏–∑ –∑–∞—Ç—Ä–∞—Ç:** –ù–∞–π–¥–∏—Ç–µ –≥–¥–µ –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –∑–∞–∫—É–ø–∫–∞—Ö
2. **üí≤ –ü–µ—Ä–µ—Å–º–æ—Ç—Ä —Ü–µ–Ω:** –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à–∏ —Ü–µ–Ω—ã —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–µ
3. **üì¶ ABC-–∞–Ω–∞–ª–∏–∑:** –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–∞–º—ã—Ö –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö
4. **‚ö° –ë—ã—Å—Ç—Ä–∞—è –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å:** –õ—É—á—à–µ –ø—Ä–æ–¥–∞—Ç—å –±—ã—Å—Ç—Ä–æ —Å –º–µ–Ω—å—à–µ–π –º–∞—Ä–∂–æ–π

üéØ **–¶–µ–ª—å:** –ú–∞—Ä–∂–∞ 20%+ —ç—Ç–æ –∑–¥–æ—Ä–æ–≤—ã–π –±–∏–∑–Ω–µ—Å!
        """
    
    def _get_growth_advice(self):
        """–°–æ–≤–µ—Ç—ã –ø–æ —Ä–æ—Å—Ç—É"""
        return """
üöÄ **–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–æ—Å—Ç–∞:**

1. **üìä –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ:** –£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –æ–±—ä–µ–º—ã –ø–æ —É—Å–ø–µ—à–Ω—ã–º —Ç–æ–≤–∞—Ä–∞–º
2. **üÜï –ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã:** –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–º–µ–∂–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
3. **üë• –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞:** –†–∞–±–æ—Ç–∞–π—Ç–µ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–∫—É–ø–∫–∞–º–∏
4. **ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ò–ò —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

üíé **–í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏ - –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!**
        """
    
    def get_motivational_quote(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ü–∏—Ç–∞—Ç—É"""
        quotes = [
            "üí™ \"–£—Å–ø–µ—Ö - —ç—Ç–æ –Ω–µ –∫–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞, –Ω–µ—É–¥–∞—á–∞ - –Ω–µ —Å–º–µ—Ä—Ç–µ–ª—å–Ω–∞—è, –≤–∞–∂–Ω–∞ —Å–º–µ–ª–æ—Å—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å!\" - –£–∏–Ω—Å—Ç–æ–Ω –ß–µ—Ä—á–∏–ª–ª—å",
            "üöÄ \"–õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ—Å–∞–¥–∫–∏ –¥–µ—Ä–µ–≤–∞ –±—ã–ª–æ 20 –ª–µ—Ç –Ω–∞–∑–∞–¥. –í—Ç–æ—Ä–æ–µ –ª—É—á—à–µ–µ –≤—Ä–µ–º—è - —Å–µ–π—á–∞—Å!\" - –ö–∏—Ç–∞–π—Å–∫–∞—è –ø–æ—Å–ª–æ–≤–∏—Ü–∞",
            "üíé \"–ö–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞. –û–¥–∏–Ω –¥–æ–º–∞—à–Ω–∏–π –∑–∞–±–µ–≥ –ª—É—á—à–µ, —á–µ–º –¥—é–∂–∏–Ω–∞ –ø—Ä–æ–º–∞—Ö–æ–≤!\" - –°—Ç–∏–≤ –î–∂–æ–±—Å",
            "üéØ \"–ù–µ –∂–¥–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏—Ö!\" - –î–∂–æ—Ä–¥–∂ –ë–µ—Ä–Ω–∞—Ä–¥ –®–æ—É",
            "‚ö° \"–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –æ—Ç–ª–∏—á–∞—é—Ç –ª–∏–¥–µ—Ä–∞ –æ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è!\" - –°—Ç–∏–≤ –î–∂–æ–±—Å",
            "üåü \"–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–µ–ª–∞—Ç—å –≤–µ–ª–∏–∫—É—é —Ä–∞–±–æ—Ç—É - –ª—é–±–∏—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ!\" - –°—Ç–∏–≤ –î–∂–æ–±—Å",
            "üèÜ \"–¢–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å - —ç—Ç–æ —Ç—ã —Å–∞–º. –£–±–µ—Ä–∏ –µ–≥–æ!\" - –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ—É—á",
            "üí∞ \"–î–µ–Ω—å–≥–∏ - —ç—Ç–æ —Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –¶–µ–ª—å - —ç—Ç–æ —Å–≤–æ–±–æ–¥–∞!\" - –†–æ–±–µ—Ä—Ç –ö–∏–π–æ—Å–∞–∫–∏",
            "üìä \"–ò–∑–º–µ—Ä—è–π –¥–≤–∞–∂–¥—ã, —Ä–µ–∂—å –æ–¥–∏–Ω —Ä–∞–∑. –í –±–∏–∑–Ω–µ—Å–µ - –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –ø–æ—Ç–æ–º –¥–µ–π—Å—Ç–≤—É–π!\" - –ë–∏–∑–Ω–µ—Å –º—É–¥—Ä–æ—Å—Ç—å"
        ]
        return random.choice(quotes)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —á–∞—Ç-–±–æ—Ç–∞
business_chatbot = BusinessChatBot()
