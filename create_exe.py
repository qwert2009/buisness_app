#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ Business Manager
"""
import os
import sys
import subprocess
import shutil
from pathlib import Path

def install_pyinstaller():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"""
    try:
        import PyInstaller
        print("‚úÖ PyInstaller —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller...")
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])
            print("‚úÖ PyInstaller —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PyInstaller: {e}")
            return False

def create_launcher_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞"""
    launcher_content = '''#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π launcher –¥–ª—è Business Manager
"""
import os
import sys
import subprocess
import webbrowser
import time
import threading
from pathlib import Path

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üè¢ Business Manager - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É —Å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–æ–º
    if getattr(sys, 'frozen', False):
        # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ exe —Ñ–∞–π–ª
        app_dir = Path(sys.executable).parent
    else:
        # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ Python —Å–∫—Ä–∏–ø—Ç
        app_dir = Path(__file__).parent
    
    os.chdir(app_dir)
    print(f"üìÇ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {app_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    main_file = app_dir / "business_manager.py"
    if not main_file.exists():
        print("‚ùå –§–∞–π–ª business_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print("‚úÖ –§–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω")
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Streamlit —Å–µ—Ä–≤–µ—Ä–∞...")
        
        # –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
        cmd = [
            sys.executable, "-m", "streamlit", "run", 
            str(main_file),
            "--server.port", "8501",
            "--server.address", "127.0.0.1",
            "--browser.gatherUsageStats", "false"
        ]
        
        print("üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8501")
        print("‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞...")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        def open_browser():
            time.sleep(5)
            try:
                webbrowser.open('http://localhost:8501')
                print("üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {e}")
                print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é: http://localhost:8501")
        
        threading.Thread(target=open_browser, daemon=True).start()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        subprocess.run(cmd)
        
    except KeyboardInterrupt:
        print("\\n‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()
'''
    
    with open("business_manager_launcher.py", "w", encoding="utf-8") as f:
        f.write(launcher_content)
    
    print("‚úÖ Launcher —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω")

def copy_required_files():
    """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    source_dir = Path("C:/Users/Windows 11/Desktop/qwe")
    
    required_files = [
        "business_manager.py",
        "smart_functions.py", 
        "notifications.py",
        "advanced_analytics.py"
    ]
    
    print("üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    for file_name in required_files:
        source_file = source_dir / file_name
        if source_file.exists():
            shutil.copy2(source_file, file_name)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file_name}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_name}")

def create_spec_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ spec —Ñ–∞–π–ª–∞ –¥–ª—è PyInstaller"""
    spec_content = '''# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['business_manager_launcher.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('business_manager.py', '.'),
        ('smart_functions.py', '.'),
        ('notifications.py', '.'),
        ('advanced_analytics.py', '.'),
    ],
    hiddenimports=[
        'streamlit',
        'pandas',
        'plotly',
        'openpyxl',
        'numpy',
        'sqlite3',
        'email.mime.text',
        'email.mime.multipart',
        'smtplib',
        'ssl',
        'hashlib',
        'webbrowser',
        'threading',
        'datetime',
        'json',
        'os',
        'sys',
        'time',
        'pathlib',
        'subprocess',
        'shutil',
        'collections',
        're'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='BusinessManager',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon=None,
)
'''
    
    with open("business_manager.spec", "w", encoding="utf-8") as f:
        f.write(spec_content)
    
    print("‚úÖ Spec —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω")

def build_exe():
    """–°–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞"""
    print("üî® –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É exe —Ñ–∞–π–ª–∞...")
    print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º PyInstaller
        cmd = [
            sys.executable, "-m", "PyInstaller",
            "--onefile",
            "--console",
            "--name", "BusinessManager",
            "--clean",
            "business_manager.spec"
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ Exe —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ exe —Ñ–∞–π–ª–∞
            exe_path = Path("dist/BusinessManager.exe")
            if exe_path.exists():
                exe_size = exe_path.stat().st_size / (1024 * 1024)  # MB
                print(f"üì¶ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {exe_size:.1f} MB")
                print(f"üìç –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {exe_path.absolute()}")
                return True
            else:
                print("‚ùå Exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ dist/")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ exe —Ñ–∞–π–ª–∞:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
        return False

def move_to_target_directory():
    """–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ exe —Ñ–∞–π–ª–∞ –≤ —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É"""
    source_exe = Path("dist/BusinessManager.exe")
    target_dir = Path("C:/Users/Windows 11/Desktop/qwe/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞")
    target_exe = target_dir / "BusinessManager.exe"
    
    if source_exe.exists():
        try:
            shutil.copy2(source_exe, target_exe)
            print(f"‚úÖ Exe —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤: {target_exe}")
            
            # –¢–∞–∫–∂–µ –∫–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
            data_files = ["business_manager.py", "smart_functions.py", "notifications.py", "advanced_analytics.py"]
            for file_name in data_files:
                if Path(file_name).exists():
                    shutil.copy2(file_name, target_dir / file_name)
            
            print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return False
    else:
        print("‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üè≠ Business Manager - –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞")
    print("=" * 60)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É
    work_dir = Path("C:/Users/Windows 11/Desktop/qwe/build_temp")
    work_dir.mkdir(exist_ok=True)
    os.chdir(work_dir)
    
    print(f"üìÇ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {work_dir}")
    
    steps = [
        ("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller", install_pyinstaller),
        ("–°–æ–∑–¥–∞–Ω–∏–µ launcher —Å–∫—Ä–∏–ø—Ç–∞", create_launcher_script),
        ("–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤", copy_required_files),
        ("–°–æ–∑–¥–∞–Ω–∏–µ spec —Ñ–∞–π–ª–∞", create_spec_file),
        ("–°–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞", build_exe),
        ("–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É", move_to_target_directory)
    ]
    
    for step_name, step_func in steps:
        print(f"\\nüîÑ {step_name}...")
        if not step_func():
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {step_name}")
            print("üõë –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            return
    
    print("\\nüéâ –£–°–ü–ï–®–ù–û! Exe —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω!")
    print("üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: C:/Users/Windows 11/Desktop/qwe/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/BusinessManager.exe")
    print("\\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É '–ù–æ–≤–∞—è –ø–∞–ø–∫–∞'")
    print("2. –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ BusinessManager.exe")
    print("3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–ø—É—Å–∫–∞ (–æ—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)")
    print("4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!")
    
    input("\\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")

if __name__ == "__main__":
    main()
