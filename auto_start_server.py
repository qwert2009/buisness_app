#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Business Manager —Å–µ—Ä–≤–µ—Ä–∞
–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏ —Å–±–æ—è—Ö –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã
"""
import subprocess
import sys
import os
import time
import threading
import webbrowser
from datetime import datetime

class ServerManager:
    def __init__(self):
        self.server_process = None
        self.should_run = True
        self.restart_count = 0
        self.max_restarts = 10
        
    def log(self, message):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π"""
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        print(f"[{timestamp}] {message}")
    
    def check_dependencies(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        self.log("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        
        required_packages = [
            'streamlit', 'pandas', 'plotly', 'openpyxl', 
            'numpy', 'sqlite3'  # sqlite3 –≤—Å—Ç—Ä–æ–µ–Ω –≤ Python
        ]
        
        missing_packages = []
        
        for package in required_packages:
            if package == 'sqlite3':
                continue  # –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å
            try:
                __import__(package)
                self.log(f"‚úÖ {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except ImportError:
                missing_packages.append(package)
                self.log(f"‚ùå {package} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        if missing_packages:
            self.log("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤...")
            try:
                subprocess.check_call([
                    sys.executable, "-m", "pip", "install", 
                    *missing_packages
                ])
                self.log("‚úÖ –í—Å–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            except subprocess.CalledProcessError as e:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤: {e}")
                return False
        
        return True
    
    def start_server(self):
        """–ó–∞–ø—É—Å–∫ Streamlit —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            self.log("üöÄ –ó–∞–ø—É—Å–∫ Business Manager —Å–µ—Ä–≤–µ—Ä–∞...")
            
            # –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            cmd = [
                sys.executable, "-m", "streamlit", "run", 
                "business_manager.py",
                "--server.port", "8501",
                "--server.address", "127.0.0.1",  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ localhost
                "--server.headless", "true",
                "--server.runOnSave", "false",  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É
                "--browser.gatherUsageStats", "false",
                "--global.developmentMode", "false"
            ]
            
            # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
            self.server_process = subprocess.Popen(
                cmd,
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT,
                universal_newlines=True,
                bufsize=1,
                creationflags=subprocess.CREATE_NO_WINDOW if os.name == 'nt' else 0
            )
            
            self.log("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
            self.log("üåê –ê–¥—Ä–µ—Å–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:")
            self.log("   - –û—Å–Ω–æ–≤–Ω–æ–π: http://localhost:8501")
            self.log("   - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π: http://127.0.0.1:8501")
            
            return True
            
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            return False
    
    def monitor_server(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞"""
        while self.should_run and self.server_process:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞
                return_code = self.server_process.poll()
                
                if return_code is not None:
                    self.log(f"‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å –∫–æ–¥–æ–º: {return_code}")
                    
                    if self.should_run and self.restart_count < self.max_restarts:
                        self.restart_count += 1
                        self.log(f"üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ({self.restart_count}/{self.max_restarts})...")
                        time.sleep(5)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
                        
                        if self.start_server():
                            continue
                        else:
                            self.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
                            break
                    else:
                        self.log("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤")
                        break
                
                # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞
                if self.server_process and self.server_process.stdout:
                    line = self.server_process.stdout.readline()
                    if line:
                        print(line.strip())
                
                time.sleep(1)
                    
            except Exception as e:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
                time.sleep(5)
    
    def open_browser(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã"""
        def delayed_open():
            time.sleep(3)
            try:
                webbrowser.open('http://localhost:8501')
                self.log("üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç")
            except Exception as e:
                self.log(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {e}")
                self.log("üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é: http://localhost:8501")
        
        threading.Thread(target=delayed_open, daemon=True).start()
    
    def stop_server(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        self.should_run = False
        if self.server_process:
            self.log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
            self.server_process.terminate()
            try:
                self.server_process.wait(timeout=10)
            except subprocess.TimeoutExpired:
                self.server_process.kill()
            self.log("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã"""
        self.log("üè¢ Business Manager - –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞")
        self.log("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if not os.path.exists("business_manager.py"):
            self.log("‚ùå –§–∞–π–ª business_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if not self.check_dependencies():
            return False
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
            if not self.start_server():
                return False
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            self.open_browser()
            
            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Å–µ—Ä–≤–µ—Ä
            self.monitor_server()
            
        except KeyboardInterrupt:
            self.log("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        except Exception as e:
            self.log(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        finally:
            self.stop_server()
        
        return True

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    # –ú–µ–Ω—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ –ø–∞–ø–∫—É —Å–∫—Ä–∏–ø—Ç–∞
    script_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_dir)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞
    server_manager = ServerManager()
    
    try:
        server_manager.run()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()
